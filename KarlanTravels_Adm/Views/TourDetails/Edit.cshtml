@model KarlanTravels_Adm.Models.TourDetail

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TourDetail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TourDetailId)
        <div class="form-group">
            @Html.LabelFor(model => model.TourId, "TourId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TourId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TourId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TourDetailName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TourDetailName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TourDetailName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Activity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityTimeStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span>Format: Hour:minute month/day/year</span>
                <br />
                @Html.EditorFor(model => model.ActivityTimeStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivityTimeStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityTimeEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActivityTimeEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivityTimeEnd, "", new { @class = "text-danger" })
                <span class="text-danger">@TempData["ActivityEndWarning"]</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacilityId, "FacilityId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FacilityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FacilityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TouristSpotId, "TouristSpotId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TouristSpotId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TouristSpotId, "", new { @class = "text-danger" })
                <span class="text-danger">@TempData["ActivityWarning"]</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityNote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActivityNote, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivityNote, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Session["AdminRole"].ToString() == "Senior Manager")
        {
        <div class="form-group">
            @Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Deleted)
                    @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model KarlanTravels_Adm.Models.TransactionRecord

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<br />
<span>
    Note:
    - You can only update one field at the a time(quantity/paid/canceled)
    - Cannot modify the order(quantity) once you have paid
</span>
<br />

<style>
    .displayAdj {
        margin-top: 6px;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TransactionRecord</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TransactionRecordId)

        <div class="form-group">
            @Html.LabelFor(model => model.TourId, "TourId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 displayAdj">
                @Html.DisplayFor(model => model.Tour.TourName, new { htmlAttributes = new { @class = "form-control" } })
                <span class="text-danger">@TempData["TourWarning"]</span>
            </div>
        </div>

        @Html.HiddenFor(model => model.TourId)


        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Username, "CustomerID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 displayAdj">
                @Html.DisplayFor(model => model.Customer.Username, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        @Html.HiddenFor(model => model.CustomerID)

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                <span class="text-danger">@TempData["QuantityWarning"]</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TransactionFee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 displayAdj">
                @Html.DisplayFor(model => model.TransactionFee, new { htmlAttributes = new { @class = "form-control" } })
                <br />
            </div>
        </div>

        @Html.HiddenFor(model => model.TransactionFee)

        <div class="form-group">
            @Html.LabelFor(model => model.Paid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Paid)
                    @Html.ValidationMessageFor(model => model.Paid, "", new { @class = "text-danger" })
                    <span class="text-danger">@TempData["PaidWarning"]</span>
                </div>
            </div>
        </div>

        @if(!Model.Canceled)
        {
            <div class="form-group">
            @Html.LabelFor(model => model.Canceled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Canceled)
                    @Html.ValidationMessageFor(model => model.Canceled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Canceled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 displayAdj">
                    <div class="checkbox">
                        @Html.DisplayFor(model => model.Canceled, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            @Html.HiddenFor(model => model.Canceled)
        }
        

        <div class="form-group">
            @Html.LabelFor(model => model.RecordedTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <span>Format: Hour:minute month/day/year</span>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RecordedTime, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        @Html.HiddenFor(model => model.RecordedTime)

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 displayAdj">
                @Html.DisplayFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        @Html.HiddenFor(model => model.DueDate)

        <div class="form-group">
            @Html.LabelFor(model => model.TransactionNote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransactionNote, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransactionNote, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Session["AdminRole"].ToString() == "Senior Manager")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Deleted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Deleted)
                        @Html.ValidationMessageFor(model => model.Deleted, "", new { @class = "text-danger" })
                        <span class="text-danger">@TempData["DelWaring"]</span>
                    </div>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
